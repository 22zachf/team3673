package org.usfirst.frc.team3673.robot;
import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

public class Robot extends IterativeRobot 
	{
	//motor controller assignment on CAN Bus
	CANTalon rightFront = new CANTalon(4);
	CANTalon leftFront = new CANTalon(3);
	CANTalon leftBack = new CANTalon(1);
	CANTalon rightBack = new CANTalon(2);
	CANTalon pickupMotor = new CANTalon(5);

	//define robot chassis (looks to proxy for logical ID)
	RobotDrive drive = new RobotDrive(leftFront, leftBack, rightFront, rightBack);

	//define joysticks
	Joystick right = new Joystick(1);
	Joystick left = new Joystick(0);
	//servos for camera
	Servo servoX = new Servo(0);
	Servo servoY = new Servo(1);
	
	double servoYAngle;
	double servoXAngle;
	
	 long start; // = System.currentTimeMillis();
	 long rev; //= start + 4*1000;
	 long end; //= start + 7*1000;
	
	//begin real code
	public void robotInit()
	{
		//Flips all drive motors 
	/*	drive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
    	drive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
    	drive.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
    	drive.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
    	*/
		servoYAngle = 0.5;
		servoXAngle = 0.5;
    	initCam();
	}
	private void initCam()
	{
	    CameraServer.getInstance().startAutomaticCapture("cam1");
	}
 public void autonomousInit() 
 {
	 drive.setSafetyEnabled(false);
	  start = System.currentTimeMillis();
	  rev = start + 4*1000;
	  end = start + 7*1000;
 }
 public void autonomousPeriodic()
 {
	// drive.setSafetyEnabled(false);
	long current = System.currentTimeMillis();
	System.out.println("Auto");
	 if(current <= rev)
	 	{ System.out.println("Auto1");
		 leftFront.set(-.4);
		 leftBack.set(-.4);
		 rightFront.set(.4);
		 rightBack.set(.4); 
		 }
	 
	if(current > rev && current < end)
		{ System.out.println("Auto2");
		 leftFront.set(.4);
		 leftBack.set(.4);
		 rightFront.set(-.4);
		 rightBack.set(-.4); 	
		}
	if(current > end)
	{ System.out.println("Auto3");
		 leftFront.set(0);
		 leftBack.set(0);
		 rightFront.set(0);
		 rightBack.set(0); 	
	}
}
	//teleop mode
	public void teleopPeriodic()
	{
		drive.tankDrive(left, right);
		
		servoY.set(servoYAngle);
		servoX.set(servoXAngle);
		
		
		while (right.getPOV(0) == 180)
	    { 
			if (servoYAngle < 0.5)
			{
			servoYAngle = servoYAngle + 0.1;
			}
			else if(servoYAngle >= 0.5)
			{
				servoYAngle = 0.5;
			}
	    }
	    while (right.getPOV(0) == 0)
	    {
	    	servoYAngle = 0.8;
	    }
	    
	    while (left.getPOV(0) == 180)
	    {
	    	servoXAngle = 0.5;
	    }
	    
	    while (left.getPOV(0) == 270)
	    {
	    	
			if (servoXAngle < 0.0)
			{
			servoXAngle = servoXAngle + 0.1;
			}
			else if(servoXAngle >= 0.0)
			{
				servoXAngle = 0.0;
			}
	    }
	    while (left.getPOV(0) == 90)
	    {
	    	
			if (servoXAngle > 0.0)
			{
			servoXAngle = servoXAngle + 0.1;
			}
			else if(servoXAngle <= 1.0)
			{
				servoXAngle = 1.0;
			}
	    }
	}
 
}
